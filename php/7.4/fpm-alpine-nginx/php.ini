upload_max_filesize = 30m
post_max_size = 30m
max_execution_time = 300
output_buffering = 4096
default_socket_timeout=60
max_input_time=60
date.timezone=Asia/Shanghai




; 启用 OPcache
opcache.enable=1

; 在 CLI（命令行）模式下禁用 OPcache（如果不需要）
opcache.enable_cli=0

; 缓存的最大文件数，超出后会删除最少使用的脚本
opcache.max_accelerated_files=80000

; 缓存区大小（单位：MB），决定缓存的 PHP 字节码存储量
opcache.memory_consumption=128

; 内存分配限制。缓存文件时，如果达到这个内存限制就会触发清理
opcache.interned_strings_buffer=32

; OPcache 文件的最大文件大小（单位：MB）
opcache.max_file_size=5

; OPcache 会定期扫描并清理脚本缓存。此项控制缓存检查的频率（单位：秒）
opcache.revalidate_freq=60

; 在请求 PHP 脚本之前，检查它是否已经更改（对开发环境有帮助）
opcache.validate_timestamps=0

; 是否将没有改变的 PHP 脚本缓存为不可变，提升性能
opcache.save_comments=0

; 启用 OPcache 字节码缓存
opcache.fast_shutdown=1

; 启用 OPcache 的性能日志功能，记录错误和优化信息（开发时可开启）
opcache.log_verbosity_level=1

; 日志文件的路径
opcache.error_log="/var/log/php_opcache.log"

; 是否启用对文件操作的加速
opcache.file_cache=/tmp/opcache

; 启用文件缓存目录。文件将保存在这个目录中，不必每次都编译
opcache.file_cache_only=0
